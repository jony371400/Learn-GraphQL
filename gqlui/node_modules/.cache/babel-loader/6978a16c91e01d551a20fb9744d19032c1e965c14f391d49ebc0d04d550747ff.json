{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\11107647\\\\Desktop\\\\Code\\\\gqlui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { ApolloProvider, ApolloClient, InMemoryCache, gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'http://localhost:5000/graphql',\n  cache: new InMemoryCache()\n});\nconst GET_HELLO_WORLD = gql`\n  query {\n    hello\n  }\n`;\nfunction App() {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_HELLO_WORLD);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test GraphQL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: data.hello\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ApolloProvider","ApolloClient","InMemoryCache","gql","useQuery","client","uri","cache","GET_HELLO_WORLD","App","loading","error","data","hello"],"sources":["C:/Users/11107647/Desktop/Code/gqlui/src/App.js"],"sourcesContent":["import './App.css';\nimport { ApolloProvider, ApolloClient, InMemoryCache, gql, useQuery } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:5000/graphql',\n  cache: new InMemoryCache()\n});\n\nconst GET_HELLO_WORLD = gql`\n  query {\n    hello\n  }\n`;\n\nfunction App() {\n  const { loading, error, data } = useQuery(GET_HELLO_WORLD);\n\n  if (loading) return <p>Loading...</p>;\n\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <div className=\"App\">\n      <h1>Test GraphQL</h1>\n      <h4>{data.hello}</h4>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,cAAc,EAAEC,YAAY,EAAEC,aAAa,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAAC;AAE5F,MAAMC,MAAM,GAAG,IAAIJ,YAAY,CAAC;EAC9BK,GAAG,EAAE,+BAA+B;EACpCC,KAAK,EAAE,IAAIL,aAAa;AAC1B,CAAC,CAAC;AAEF,MAAMM,eAAe,GAAGL,GAAI;AAC5B;AACA;AACA;AACA,CAAC;AAED,SAASM,GAAG,GAAG;EAAA;EACb,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGR,QAAQ,CAACI,eAAe,CAAC;EAE1D,IAAIE,OAAO,EAAE,oBAAO;IAAA,UAAG;EAAU;IAAA;IAAA;IAAA;EAAA,QAAI;EAErC,IAAIC,KAAK,EAAE,oBAAO;IAAA,UAAG;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAI;EAEjC,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,UAAI;IAAY;MAAA;MAAA;MAAA;IAAA,QAAK,eACrB;MAAA,UAAKC,IAAI,CAACC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACjB;AAEV;AAAC,GAbQJ,GAAG;EAAA,QACuBL,QAAQ;AAAA;AAAA,KADlCK,GAAG;AAeZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}