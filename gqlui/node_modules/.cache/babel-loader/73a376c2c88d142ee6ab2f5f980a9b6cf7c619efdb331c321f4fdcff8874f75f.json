{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\11107647\\\\Desktop\\\\Code\\\\Learn-GraphQL\\\\gqlui\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { ApolloProvider, ApolloClient, InMemoryCache, gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'http://localhost:5000/graphql',\n  cache: new InMemoryCache()\n});\nconst GET_HELLO_WORLD = gql`\n  query {\n    hello\n  }\n`;\nfunction App() {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_HELLO_WORLD);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test GraphQL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: data.hello\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 3\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDOM","ApolloProvider","ApolloClient","InMemoryCache","gql","useQuery","client","uri","cache","GET_HELLO_WORLD","App","loading","error","data","hello","root","createRoot","document","getElementById","render"],"sources":["C:/Users/11107647/Desktop/Code/Learn-GraphQL/gqlui/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { ApolloProvider, ApolloClient, InMemoryCache, gql, useQuery } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:5000/graphql',\n  cache: new InMemoryCache()\n});\n\nconst GET_HELLO_WORLD = gql`\n  query {\n    hello\n  }\n`;\n\nfunction App() {\n  const { loading, error, data } = useQuery(GET_HELLO_WORLD);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <div>\n      <h1>Test GraphQL</h1>\n\n      <h3>{data.hello}</h3>\n    </div>\n  );\n}\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,cAAc,EAAEC,YAAY,EAAEC,aAAa,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAAC;AAE5F,MAAMC,MAAM,GAAG,IAAIJ,YAAY,CAAC;EAC9BK,GAAG,EAAE,+BAA+B;EACpCC,KAAK,EAAE,IAAIL,aAAa;AAC1B,CAAC,CAAC;AAEF,MAAMM,eAAe,GAAGL,GAAI;AAC5B;AACA;AACA;AACA,CAAC;AAED,SAASM,GAAG,GAAG;EAAA;EACb,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGR,QAAQ,CAACI,eAAe,CAAC;EAE1D,IAAIE,OAAO,EAAE,oBAAO;IAAA,UAAG;EAAU;IAAA;IAAA;IAAA;EAAA,QAAI;EACrC,IAAIC,KAAK,EAAE,oBAAO;IAAA,UAAG;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAI;EAEjC,oBACE;IAAA,wBACE;MAAA,UAAI;IAAY;MAAA;MAAA;MAAA;IAAA,QAAK,eAErB;MAAA,UAAKC,IAAI,CAACC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACjB;AAEV;AAAC,GAbQJ,GAAG;EAAA,QACuBL,QAAQ;AAAA;AAAA,KADlCK,GAAG;AAgBZ,MAAMK,IAAI,GAAGf,QAAQ,CAACgB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACT,QAAC,cAAc;EAAC,MAAM,EAAEb,MAAO;EAAA,uBAC7B,QAAC,GAAG;IAAA;IAAA;IAAA;EAAA;AAAG;EAAA;EAAA;EAAA;AAAA,QACQ,CAClB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}